
TODO: 1. 우추/쿨감신
TODO: 2. 20초쯤 남았을 때 깜빡이는거



??. 오버레이 움직이지 않도록 고정시키는 버튼 추가.


DONE: Connector를 싱글톤화
DONE: 테스트할 때 서버와 통신하지 않는 mockConnector를 사용할 수 있도록 Liner가 Connector를 받아서 작업을 수행할 수 있게 리팩토링
DONE: Liner 테스트코드 작성
DONE: Connector의 useFlash등의 함수 Liner로 옮기기
DONE: Liner에 있는 useFlash, FlashOn등의 함수를 Flash클래스로 옮기기!
DONE: Flash의 테스트케이스 작성학
    DONE: FlashTest.java의 useFlash를 실행하면 운영서버로 스펠 사용여부를 보낸다.
        이러면 진정한 테스트를 하지 못하는 것.
        서버에 가지 않아도 수행할 수 있는 방법을 생각해보기.
DONE: Flash, Liner, Connector 테스트코드 작성하기

DONE: Flash를 CounterLabel을 extends하게 만들어서 CounterLabel의 startCount의 복잡성 제거하기
DONE: 위처럼 할 수 없을꺼같다. 그렇다면, CounterLabel을 FlashIcon의 속성값으로 두면 되지 않을까?
DONE: sendFlashStatus가 굳이 Flash클래스에 있어야할까? 어차피 liner를 보내고, 나중에 다른 스펠도 추가될텐데
    Liner쪽에 보내는게 좋지않을까?
DONE: requestMapping "useFlash"를 sendLinerStatus로 바꾸기
DONE: Flash에서 On 제거하기
        그에 따른 테스트코드들 수정하기
DONE: Flash안의 StartCounter를 Liner에 못옮기나?  startCounter호출이 서로 조금씩 다른거같은데
DONE: Spell class추가 및 테스트코드 수정
DONE: Connector.java의 아래 부분 (Flash의 값들을 변경해주는부분을) Flash.setFlash(Flash model)로 바꾸기
    clientFlash.setCoolTime(serverLiner.getFlash().getCoolTime());
    clientFlash.setSpellCoolTime(serverLiner.getFlash().getSpellCoolTime());
    clientFlash.setCosmicInsight(serverLiner.getFlash().isCosmicInsight());
    clientFlash.setIonianBoots(serverLiner.getFlash().isIonianBoots());

DONE: Liner.java touchFlash를 touchSpell(Spell spell)로 바꾸기.
DONE: Liner.java touchCosmicInsight, buyIonianBoots 완성하기
DONE: CosmicInsight, IonianBoots JLabel, Icon만들기 (Spell아님)
    클래스명은 CoolTimeReducer정도면 되려나?
DONE: touchCosmicInsight, buyIonianBoots 얘들도 touchCooltimeReducer(CoolTimeReducer reducer) 이런식으로 바꾸기

DONE: 우추/쿨감신 아이콘 단거 코드정리하기. 테스트 만들 거 있나 확인하기

DONE: Main에서 시작하기 전에 새로운 방에 입장할껀지 물어보는 창을 띄우기

